<?php

class GoalController extends Controller
{
       public $layout='//layouts/main';
    
        /**
	 * @var CActiveRecord the currently loaded data model instance.
	 */
	private $_model;
       /**
	 * @return array action filters
	 */
	public function filters()
	{
		return array(
			'accessControl', // perform access control for CRUD operations
			'postOnly + delete', // we only allow deletion via POST request
		);
	}

	/**
	 * Specifies the access control rules.
	 * This method is used by the 'accessControl' filter.
	 * @return array access control rules
	 */
	public function accessRules()
	{
		return array(
			array('allow',  // allow all users to perform 'index' and 'view' actions
				//'actions'=>array('index','view','create','update'),
				//'users'=>array('*'),
			),
			array('allow', // allow authenticated user to perform 'create' and 'update' actions
				'actions'=>array('create','update','view','step'),
				'users'=>array('@'),
			),
			array('allow', // allow admin user to perform 'admin' and 'delete' actions
				'actions'=>array('admin','delete'),
				'users'=>array('admin'),
			),
			array('deny',  // deny all users
				'users'=>array('*'),
			),
		);
	}
        
	public function actionIndex()
	{
                $criteria=new CDbCriteria(array(
			//'condition'=>'status='.Post::STATUS_PUBLISHED,
			'order'=>'update_time DESC',
			//'with'=>'commentCount',
		));
//		if(isset($_GET['tag']))
//			$criteria->addSearchCondition('tags',$_GET['tag']);

		$dataProvider=new CActiveDataProvider('Goal', array(
			'pagination'=>array(
				'pageSize'=>Yii::app()->params['postsPerPage'],
			),
			'criteria'=>$criteria,
		));

		$this->render('index',array(
			'dataProvider'=>$dataProvider,
		));
		
	}

	public function actionCreate($step)
	{
            $this->layout = '//layouts/step';
            // public $layout='///main';
       // echo     $step;
        if($step==1) {
		$model=new Goal;
               //
		if(isset($_POST['Goal']))
		{
//                     echo '<pre>'; print_r($_POST);    echo '</pre>';
//                     die("eddie");
		       $model->attributes=$_POST['Goal'];                        
                      // echo '<pre>'; print_r($_FILES); echo $_FILES['Goal']['name']['file']; die;
                        if($_FILES['Goal']['tmp_name']['file']!='')                       
                        { 
                        // include("resize-class.php");
                            $tmpName=$_FILES['Goal']['tmp_name']['file'];
                            $extension=explode(".", $_FILES['Goal']['name']['file']);
                            $ext=end($extension);
                            if($ext=='jpeg' || $ext=='jpg' || $ext=='gif' || $ext=='png' || $ext=='bmp')
                            {
                                    $name=$_FILES['Goal']['name']['file'];
                                    $filename = substr($name,0,((strlen($name))-(strlen($ext)+1))).'_'.time().'.'.$ext;
                                    
                                    $original='images/goalIcons/original/' . $filename;
                                    $thumb='images/goalIcons/thumb/' . $filename;                                    
                                    if(move_uploaded_file($tmpName, $original))
                                    {
                                        // *** 1) Initialise / load image
                                        $resizeObj1 = new resize($original);
                                        // *** 2) Resize image (options: exact, portrait, landscape, auto, crop)
                                        $resizeObj1 -> resizeImage(471, 264, 'crop');
                                        // *** 3) Save image
                                        $resizeObj1 -> saveImage($thumb, 100);
                                        $model->image=$thumb;
                                    }
                            }
                            else
                            {
                                Yii::app()->user->setFlash('notice','Please upload only .jpeg, .jpg, .gif, .png or .bmp files only.');
                            }

                       }
                      
			if($model->save()) 
                            {
                            $this->redirect(array('dashboard'));
                            }
//				$this->redirect(array('view','id'=>$model->id));
		}
        }
		$this->render('step',array(
			'model'=>$model,
		));
	}
        
        
        /**
	 * Displays a particular model.
	 */
	public function actionView()
	{   
		$post=$this->loadModel();
		//$comment=$this->newComment($goal);
               
		$this->render('view',array(
			'model'=>$post,
			//'comment'=>$comment,
		));
	}
        
        	/**
	 * Returns the data model based on the primary key given in the GET variable.
	 * If the data model is not found, an HTTP exception will be raised.
	 */
	public function loadModel()
	{
		if($this->_model===null)
		{
			if(isset($_GET['id']))
			{
//				if(Yii::app()->user->isGuest)
//					$condition='status='.Post::STATUS_PUBLISHED.' OR status='.Post::STATUS_ARCHIVED;
//				else
					$condition='';
				$this->_model=Goal::model()->findByPk($_GET['id'], $condition);
			}
			if($this->_model===null)
				throw new CHttpException(404,'The requested page does not exist.');
		}
		return $this->_model;
	}
        
        public function actiondashboard()
        {
             $id = Yii::app()->user->id;
             $user_detail = User::model()->findByPk("$id");
             if(!empty ($user_detail)) {
             $this->render('dashboard',array('model'=>$user_detail));
			 }
             else{echo "please login";}
        }
        
        	/**
	 * Manages all models.
	 */
	public function actionAdmin()
	{
		$model=new Goal('search');
		if(isset($_GET['Goal']))
			$model->attributes=$_GET['Goal'];
		$this->render('admin',array(
			'model'=>$model,
		));
	}
}